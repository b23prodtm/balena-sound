FROM balenalib/raspberrypi3-debian:stretch-build
ENV DBUS_SYSTEM_BUS_ADDRESS unix:path=/host/run/dbus/system_bus_socket

ENV UDEV 1
# RUN [ "cross-build-start" ]

ENV BLUETOOTH_PIN_CODE 0000
ENV CONNECTION_NOTIFY_VOLUME 100
ENV SYSTEM_OUTPUT_VOLUME 75
# local build tests data
ARG BTSPEAKER_SINK
ENV BTSPEAKER_SINK ${BTSPEAKER_SINK:-00:00:00:00:00:00}
ENV PCM_BUFFER_TIME ${PCM_BUFFER_TIME:-500000}
RUN install_packages \
  alsa-utils \
  bluez \
### ARM BEGIN
  bluealsa \
  mplayer \
  python-gpiozero \
### ARM END
  python-dbus \
  python-gobject \
  python-bluez \
  libbluetooth-dev

WORKDIR /usr/src/

# Bluetooth-agent handles the auth of devices
COPY bluetooth-agent .
RUN chmod 0755 bluetooth-agent

# Copy sounds
COPY sounds sounds

# Setup udev rules - this lets us play the connect/disconnect sound,
# turn off discover/pairing when a client is connected
# and also run a python script
COPY bluetooth-udev .
RUN chmod +x bluetooth-udev
COPY udev-rules/ /etc/udev/rules.d/
COPY bluetooth-scripts bluetooth-scripts

# add bluealsa speaker files
COPY btspeaker* ./
RUN chmod +x btspeaker*
COPY .asoundrc .

COPY start.sh .
RUN chmod 0755 start.sh

# ALSAâ€™s Dynamic Audio Power Management (DAPM) shutting down the sound module of your device to save power
RUN touch /etc/modprobe.d/snd_soc_core.conf && echo "options snd_soc_core pmdown_time -1" | tee -a /etc/modprobe.d/snd_soc_core.conf

# RUN [ "cross-build-end" ]

CMD [ "./start.sh" ]
