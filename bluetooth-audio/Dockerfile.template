FROM balenalib/%%BALENA_MACHINE_NAME%%:stretch
ENV DBUS_SYSTEM_BUS_ADDRESS unix:path=/host/run/dbus/system_bus_socket

# Deprecated INITSYSTEM as of balenalib major changes
# https://www.balena.io/docs/reference/base-images/base-images/#major-changes
ENV INITSYSTEM OFF
ENV UDEV on

ENV BLUETOOTH_PIN_CODE 0000
ENV CONNECTION_NOTIFY_VOLUME 100
ENV SYSTEM_OUTPUT_VOLUME 75
# local build tests data
ARG BLUETOOTH_DEVICE_NAME
ARG BTSPEAKER_SINK
ENV BLUETOOTH_DEVICE_NAME ${BLUETOOTH_DEVICE_NAME:-BluePi}
ENV BTSPEAKER_SINK ${BTSPEAKER_SINK:-00:00:00:00:00:00}
ENV PCM_BUFFER_TIME ${PCM_BUFFER_TIME:-250000}
ENV BTSPEAKER_INPUT ${BTSPEAKER_INPUT:-hw:1,0}
# RUN [ "cross-build-start" ]
RUN install_packages \
  alsa-utils \
  bluealsa \
  bluez \
  python-gobject \
  python-dbus \
  python-bluez \
  libbluetooth-dev \
  mplayer
# RUN [ "cross-build-end" ]
WORKDIR /usr/src/

# Copy sounds
COPY sounds sounds

# Setup udev rules - this lets us play the connect/disconnect sound
# and also turn off discover/pairing when a client is connected
COPY bluetooth-udev .
RUN chmod +x bluetooth-udev
COPY udev-rules/ /etc/udev/rules.d/

# add bluealsa service
COPY btspeaker* ./
RUN chmod +x ./btspeaker*
COPY .asoundrc .

# Bluetooth-agent handles the auth of devices
COPY bluetooth-agent .
RUN chmod +x bluetooth-agent

COPY start.sh .
RUN chmod +x ./start.sh

# starts an endless play from bluetooth source device
CMD ["bash", "start.sh"]
